#!/bin/bash

echo "üîí Test complet : Post payant + Message de verrouillage + Int√©gration Stripe"
echo "============================================================================"

API_BASE="http://4.178.177.89"

# √âtape 1 : Cr√©er un nouveau cr√©ateur pour tester
echo "üë§ 1. Cr√©ation d'un nouveau cr√©ateur pour les tests"
echo "---------------------------------------------------"

CREATOR_RESPONSE=$(curl -s -X POST "$API_BASE/register" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "creator_payant@test.com",
    "password": "password123",
    "username": "creator_payant",
    "name": "Cr√©ateur Payant",
    "firstName": "Cr√©ateur"
  }')

echo "Cr√©ateur cr√©√©: $CREATOR_RESPONSE"

# Connexion du cr√©ateur
CREATOR_LOGIN=$(curl -s -X POST "$API_BASE/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "creator_payant@test.com",
    "password": "password123"
  }')

CREATOR_TOKEN=$(echo $CREATOR_LOGIN | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
echo "Token cr√©ateur: $CREATOR_TOKEN"

# √âtape 2 : Cr√©er un abonn√©
echo ""
echo "üë• 2. Cr√©ation d'un abonn√© pour les tests"
echo "-----------------------------------------"

SUBSCRIBER_RESPONSE=$(curl -s -X POST "$API_BASE/register" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "abonne_test@test.com",
    "password": "password123",
    "username": "abonne_test",
    "name": "Abonn√© Test",
    "firstName": "Abonn√©"
  }')

echo "Abonn√© cr√©√©: $SUBSCRIBER_RESPONSE"

# Connexion de l'abonn√©
SUBSCRIBER_LOGIN=$(curl -s -X POST "$API_BASE/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "abonne_test@test.com",
    "password": "password123"
  }')

SUBSCRIBER_TOKEN=$(echo $SUBSCRIBER_LOGIN | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
echo "Token abonn√©: $SUBSCRIBER_TOKEN"

# √âtape 3 : Cr√©er un post payant
echo ""
echo "üí∞ 3. Cr√©ation d'un post PAYANT"
echo "-------------------------------"

POST_PAYANT_RESPONSE=$(curl -s -X POST "$API_BASE/api/posts" \
  -H "Authorization: Bearer $CREATOR_TOKEN" \
  -F 'content=üî• CONTENU EXCLUSIF PREMIUM üî• - Ce contenu incroyable est r√©serv√© aux abonn√©s payants ! Vous d√©couvrirez des secrets exclusifs ici !' \
  -F 'visibility=public' \
  -F 'is_paid_only=true')

echo "R√©ponse cr√©ation post payant: $POST_PAYANT_RESPONSE"

# Extraire l'ID du post (si la cr√©ation a r√©ussi)
POST_ID=$(echo $POST_PAYANT_RESPONSE | grep -o '"id":[0-9]*' | cut -d':' -f2)
echo "ID du post payant: $POST_ID"

# √âtape 4 : Cr√©er un post gratuit pour comparaison
echo ""
echo "üÜì 4. Cr√©ation d'un post GRATUIT pour comparaison"
echo "------------------------------------------------"

POST_GRATUIT_RESPONSE=$(curl -s -X POST "$API_BASE/api/posts" \
  -H "Authorization: Bearer $CREATOR_TOKEN" \
  -F 'content=üì¢ Contenu gratuit accessible √† tous ! Ceci est un aper√ßu de mes publications.' \
  -F 'visibility=public' \
  -F 'is_paid_only=false')

echo "R√©ponse cr√©ation post gratuit: $POST_GRATUIT_RESPONSE"

# Extraire l'ID du post gratuit
POST_GRATUIT_ID=$(echo $POST_GRATUIT_RESPONSE | grep -o '"id":[0-9]*' | cut -d':' -f2)
echo "ID du post gratuit: $POST_GRATUIT_ID"

# √âtape 5 : V√©rifier les posts du cr√©ateur
echo ""
echo "üìã 5. V√©rification des posts cr√©√©s"
echo "----------------------------------"

POSTS_CREATOR=$(curl -s "$API_BASE/api/posts/user/$(echo $CREATOR_LOGIN | grep -o '"user_id":[0-9]*' | cut -d':' -f2 || echo $CREATOR_LOGIN | grep -o '"id":[0-9]*' | cut -d':' -f2)" \
  -H "Authorization: Bearer $CREATOR_TOKEN")

echo "Posts du cr√©ateur: $POSTS_CREATOR"

# √âtape 6 : Test d'acc√®s SANS abonnement (message de verrouillage attendu)
echo ""
echo "üö´ 6. Test d'acc√®s au post payant SANS abonnement"
echo "------------------------------------------------"

if [ ! -z "$POST_ID" ]; then
    ACCESS_DENIED=$(curl -s "$API_BASE/api/posts/$POST_ID" \
      -H "Authorization: Bearer $SUBSCRIBER_TOKEN")
    
    echo "R√©ponse acc√®s sans abonnement: $ACCESS_DENIED"
    
    # V√©rifier le message de verrouillage
    if echo "$ACCESS_DENIED" | grep -q "r√©serv√© aux abonn√©s payants"; then
        echo "‚úÖ MESSAGE DE VERROUILLAGE D√âTECT√â !"
    else
        echo "‚ùå Message de verrouillage non trouv√©"
    fi
    
    # V√©rifier has_access = false
    if echo "$ACCESS_DENIED" | grep -q '"has_access":false'; then
        echo "‚úÖ has_access = false (correct)"
    else
        echo "‚ùå has_access devrait √™tre false"
    fi
else
    echo "‚ùå Impossible de tester - Post payant non cr√©√©"
fi

# √âtape 7 : Test d'acc√®s au post gratuit (acc√®s normal attendu)
echo ""
echo "‚úÖ 7. Test d'acc√®s au post gratuit (contr√¥le)"
echo "--------------------------------------------"

if [ ! -z "$POST_GRATUIT_ID" ]; then
    ACCESS_GRATUIT=$(curl -s "$API_BASE/api/posts/$POST_GRATUIT_ID" \
      -H "Authorization: Bearer $SUBSCRIBER_TOKEN")
    
    echo "R√©ponse acc√®s post gratuit: $ACCESS_GRATUIT"
    
    # V√©rifier l'acc√®s libre
    if echo "$ACCESS_GRATUIT" | grep -q '"has_access":true'; then
        echo "‚úÖ Acc√®s gratuit = true (correct)"
    else
        echo "‚ùå Acc√®s gratuit devrait √™tre true"
    fi
fi

echo ""
echo "üìä R√âSUM√â DES TESTS"
echo "==================="
echo "1. Cr√©ation cr√©ateur: $([ ! -z "$CREATOR_TOKEN" ] && echo "‚úÖ OK" || echo "‚ùå √âCHEC")"
echo "2. Cr√©ation abonn√©: $([ ! -z "$SUBSCRIBER_TOKEN" ] && echo "‚úÖ OK" || echo "‚ùå √âCHEC")"
echo "3. Post payant cr√©√©: $([ ! -z "$POST_ID" ] && echo "‚úÖ OK" || echo "‚ùå √âCHEC")"
echo "4. Post gratuit cr√©√©: $([ ! -z "$POST_GRATUIT_ID" ] && echo "‚úÖ OK" || echo "‚ùå √âCHEC")"
echo "5. Message de verrouillage: $(echo "$ACCESS_DENIED" | grep -q "r√©serv√© aux abonn√©s" && echo "‚úÖ OK" || echo "‚ùå √âCHEC")"

echo ""
echo "üéØ PROCHAINE √âTAPE : Test int√©gration Stripe"
echo "============================================"
