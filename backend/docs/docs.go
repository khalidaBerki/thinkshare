// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/profile": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Met à jour les champs du profil (nom, bio, avatar)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Modifier le profil utilisateur",
                "parameters": [
                    {
                        "description": "Champs modifiables du profil",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/subscribe": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "S’abonner à un créateur (payant ou gratuit)",
                "parameters": [
                    {
                        "description": "Données d’abonnement",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription.SubscriptionInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription.Subscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/unsubscribe": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Se désabonner d’un créateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du créateur",
                        "name": "creator_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/{provider}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Début de l'authentification Google OAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "google",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirection vers Google",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/{provider}/callback": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Callback OAuth Google",
                "parameters": [
                    {
                        "type": "string",
                        "description": "google",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Connexion utilisateur (login email/password)",
                "parameters": [
                    {
                        "description": "Identifiants de connexion",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Déconnexion utilisateur",
                "responses": {
                    "302": {
                        "description": "Redirect vers /",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Créer un compte avec name, firstname, username, email, password",
                "parameters": [
                    {
                        "description": "Informations d'inscription",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterInput": {
            "type": "object",
            "required": [
                "email",
                "firstname",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "comment.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "postAccess": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postaccess.PostAccess"
                    }
                },
                "postID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "like.Like": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "postID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "media.Media": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mediaType": {
                    "type": "string"
                },
                "mediaURL": {
                    "type": "string"
                },
                "postID": {
                    "type": "integer"
                }
            }
        },
        "message.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "receiverID": {
                    "type": "integer"
                },
                "senderID": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "post.Post": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/comment.Comment"
                    }
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "creatorID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "likes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/like.Like"
                    }
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/media.Media"
                    }
                },
                "postAccess": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postaccess.PostAccess"
                    }
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "postaccess.PostAccess": {
            "type": "object",
            "properties": {
                "commentID": {
                    "description": "\u003c-- Ajoute ce champ",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "postID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "subscription.Subscription": {
            "type": "object",
            "properties": {
                "creatorID": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "startDate": {
                    "type": "string"
                },
                "subscriberID": {
                    "type": "integer"
                },
                "type": {
                    "description": "\"paid\" ou \"free\"",
                    "type": "string"
                }
            }
        },
        "subscription.SubscriptionInput": {
            "type": "object",
            "required": [
                "creator_id",
                "type"
            ],
            "properties": {
                "creator_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "paid",
                        "free"
                    ]
                }
            }
        },
        "user.UpdateUserInput": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string",
                    "example": "https://cdn.thinkshare/avatar.jpg"
                },
                "bio": {
                    "type": "string",
                    "example": "Développeur Go, passionné par l'éducation"
                },
                "full_name": {
                    "type": "string",
                    "example": "Haithem Hammami"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string",
                    "example": "https://cdn.thinkshare/avatar.jpg"
                },
                "bio": {
                    "type": "string",
                    "example": "Étudiant à l’EEMI et dev fullstack"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-01T15:04:05Z"
                },
                "email": {
                    "type": "string",
                    "example": "haithem@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Haithem"
                },
                "full_name": {
                    "type": "string",
                    "example": "Haithem Hammami"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "messages_recv": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/message.Message"
                    }
                },
                "messages_sent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/message.Message"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "Hammami"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/post.Post"
                    }
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/subscription.Subscription"
                    }
                },
                "username": {
                    "type": "string",
                    "example": "haithemdev"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
